<% rails_socket = fetch(:server_stack).include?("puma") ? fetch(:puma_socket) : fetch(:unicorn_socket) %>
upstream <%=fetch(:app)%> {
  server unix://<%= rails_socket %> fail_timeout=0;
}

<% if fetch(:lets_encrypt) %>

server {
    listen 80;
    server_name <%=fetch(:server_name)%>;
    return 301 https://$host$request_uri;
}

<% end %>

server {
  server_name <%=fetch(:server_name)%>;

  location ~ /.well-known {
    allow all;
  }

  <% if fetch(:lets_encrypt) %>

  listen 443 ssl;
  ssl_certificate /etc/letsencrypt/live/<%=fetch(:server_name)%>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%=fetch(:server_name)%>/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security max-age=15768000;
  <% else %>
  listen      [::]:80;
  listen      80;
  <% end %>

  client_max_body_size <%=fetch(:nginx_client_max_body_size, '4M')%>;

  location    / {

    gzip on;
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype ap$
    gzip_vary on;
    gzip_comp_level  6;

    proxy_pass  http://<%=fetch(:app)%>;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
  }

}
