<% rails_socket = fetch(:server_stack).include?("puma") ? fetch(:puma_socket) : fetch(:unicorn_socket) %>
upstream <%= fetch(:app) %> {
  server unix://<%= rails_socket %> fail_timeout=0;
}

server {
  # listen 80 default deferred;
  server_name <%= fetch(:server_name) %>;
  keepalive_timeout 5;

  root <%= fetch(:current_path) %>/public;

  client_max_body_size <%= fetch(:nginx_client_max_body_size) %>;

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite  ^(.*)$  /system/maintenance.html last;
    break;
  }

  location ~ ^/(assets)/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }

  location @rails {
    gzip on;
    gzip_min_length  1100;
    gzip_buffers  4 32k;
    gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_vary on;
    gzip_comp_level  6;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= fetch(:app) %>;
   <% if fetch(:cloudflare_ssl) %>
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
   <% end %>

  }

  try_files $uri/index.html $uri @rails;

  error_page 500 502 503 504 /500.html;
}
